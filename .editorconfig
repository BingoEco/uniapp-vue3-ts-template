# =============================================================================
# EditorConfig 配置文件
# 作用：统一不同编辑器/IDE 的基础代码格式（缩进、换行、编码等）
# 官网：https://editorconfig.org/
# 注意：需配合编辑器插件（如 VS Code 内置支持）或工具链使用
# =============================================================================

# 表示这是项目根目录的配置文件
# 编辑器读取到此文件后，将不再向上级目录查找 .editorconfig
root = true

# =============================================================================
# 通用规则：适用于所有文件（除特殊声明外）
# =============================================================================
[*]

# 缩进风格：使用空格（space）而非制表符（tab）
indent_style = space

# 缩进大小：每个缩进层级为 2 个空格
# 与 Prettier 的 tabWidth: 2 保持一致
indent_size = 2

# 换行符格式：使用 LF（\n），即 Unix/Linux/macOS 风格
# 可避免 Windows 下出现 "Delete ␍" 的 Prettier 报错
end_of_line = lf

# 文件编码：统一使用 UTF-8，避免中文或特殊字符乱码
charset = utf-8

# 自动删除行尾多余的空格（例如：console.log('xxx');␣␣ → 删除末尾空格）
# 保持代码整洁，减少无意义的 diff
trim_trailing_whitespace = true

# 在文件末尾插入一个换行符（即最后一行之后有一个空行）
# 符合 POSIX 标准，Git、Shell 等工具推荐此做法
insert_final_newline = true

# =============================================================================
# Markdown 文件特殊规则（.md）
# =============================================================================
[*.md]

# 在 Markdown 文件中，不禁用行尾空格
# 原因：Markdown 语法中，行尾两个及以上空格 + 回车 = 强制换行（硬换行）
# 例如：
#   第一行␣␣
#   第二行 → 会显示为两行（而非合并）
# 如果自动删除行尾空格，会导致换行失效
trim_trailing_whitespace = false
